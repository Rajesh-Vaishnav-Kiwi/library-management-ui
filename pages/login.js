import React, { useEffect, useState } from "react";
import Head from "next/head";
import { useForm } from "react-hook-form";
import { useRouter } from "next/router";
import styles from "../styles/Home.module.css";
import axios from "axios";
const login = () => {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const [changeroute, setChangeroute] = useState(false);
  const [tokens, setTokens] = useState("");
  const [datas, setData] = useState({
    email: "",
    password: "",
  });
  const router = useRouter();
  useEffect(() => {
    const token = JSON.parse(localStorage.getItem("myData"));
    if (token) {
      setTokens(token);
    }
  }, []);
  console.log(tokens);
  const onSubmit = (e, data) => {
    console.log(data);

    const { email, password } = datas;
    const val = { email, password };
    const headers = {
      'Content-Type': 'application/json',
      'authorization': `${tokens}`,
    }
    axios.post("http://localhost:4000/user-login", val,{headers:headers}).then((res) => {
      setChangeroute(true);
      console.log(res);
      localStorage.setItem("myData", JSON.stringify(res.data.token));
    });
    if (changeroute == true) {
      window.alert("Login SuccessFully");
      router.push("./userLayout");
    } else 
    {
      window.alert("Login Id n Password Incorrect");
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form onSubmit={handleSubmit(onSubmit)}>
        <h1>Login Up</h1>
        <input
          type="email"
          {...register("email", { required: true })}
          onChange={(e) =>
            setData({ ...datas, [e.target.name]: e.target.value })
          }
          name="email"
          placeholder="enter your mail"
        />
        {errors.email?.type === "required" && "Email  is required"}
        <br />
        <input
          type="password"
          {...register("password", { required: true })}
          onChange={(e) =>
            setData({ ...datas, [e.target.name]: e.target.value })
          }
          name="password"
          placeholder="enter your password"
        />
        {errors.password?.type === "required" && "Password  is required"}
        <br />
        <input type="submit" />
        <br />
        <h1>Are You Admin?Do Login</h1>
        <button onClick={() => router.push("./adminLogin")}>AdminLogin</button>
        <h1>Not User?Do Sign Up</h1>
        <button onClick={() => router.push("./signup")}>Sign Up</button>
      </form>
    </div>
  );
};

export default login;
